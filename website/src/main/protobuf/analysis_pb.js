/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var project_pb = require('./project_pb.js');
goog.object.extend(proto, project_pb);
var specification_pb = require('./specification_pb.js');
goog.object.extend(proto, specification_pb);
goog.exportSymbol('proto.ProjectAnalysis', null, global);
goog.exportSymbol('proto.SpecificationAnalysis', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProjectAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ProjectAnalysis.repeatedFields_, null);
};
goog.inherits(proto.ProjectAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProjectAnalysis.displayName = 'proto.ProjectAnalysis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SpecificationAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SpecificationAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SpecificationAnalysis.displayName = 'proto.SpecificationAnalysis';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ProjectAnalysis.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProjectAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.ProjectAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProjectAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProjectAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    project: (f = msg.getProject()) && project_pb.Project.toObject(includeInstance, f),
    specificationList: jspb.Message.toObjectList(msg.getSpecificationList(),
    proto.SpecificationAnalysis.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProjectAnalysis}
 */
proto.ProjectAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProjectAnalysis;
  return proto.ProjectAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProjectAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProjectAnalysis}
 */
proto.ProjectAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new project_pb.Project;
      reader.readMessage(value,project_pb.Project.deserializeBinaryFromReader);
      msg.setProject(value);
      break;
    case 3:
      var value = new proto.SpecificationAnalysis;
      reader.readMessage(value,proto.SpecificationAnalysis.deserializeBinaryFromReader);
      msg.addSpecification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProjectAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProjectAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProjectAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProjectAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      project_pb.Project.serializeBinaryToWriter
    );
  }
  f = message.getSpecificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.SpecificationAnalysis.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ProjectAnalysis.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ProjectAnalysis.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Project project = 2;
 * @return {?proto.Project}
 */
proto.ProjectAnalysis.prototype.getProject = function() {
  return /** @type{?proto.Project} */ (
    jspb.Message.getWrapperField(this, project_pb.Project, 2));
};


/** @param {?proto.Project|undefined} value */
proto.ProjectAnalysis.prototype.setProject = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.ProjectAnalysis.prototype.clearProject = function() {
  this.setProject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProjectAnalysis.prototype.hasProject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SpecificationAnalysis specification = 3;
 * @return {!Array<!proto.SpecificationAnalysis>}
 */
proto.ProjectAnalysis.prototype.getSpecificationList = function() {
  return /** @type{!Array<!proto.SpecificationAnalysis>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SpecificationAnalysis, 3));
};


/** @param {!Array<!proto.SpecificationAnalysis>} value */
proto.ProjectAnalysis.prototype.setSpecificationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.SpecificationAnalysis=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SpecificationAnalysis}
 */
proto.ProjectAnalysis.prototype.addSpecification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.SpecificationAnalysis, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.ProjectAnalysis.prototype.clearSpecificationList = function() {
  this.setSpecificationList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SpecificationAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.SpecificationAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SpecificationAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpecificationAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    specification: (f = msg.getSpecification()) && specification_pb.Specification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SpecificationAnalysis}
 */
proto.SpecificationAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SpecificationAnalysis;
  return proto.SpecificationAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SpecificationAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SpecificationAnalysis}
 */
proto.SpecificationAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new specification_pb.Specification;
      reader.readMessage(value,specification_pb.Specification.deserializeBinaryFromReader);
      msg.setSpecification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SpecificationAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SpecificationAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SpecificationAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SpecificationAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecification();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      specification_pb.Specification.serializeBinaryToWriter
    );
  }
};


/**
 * optional Specification specification = 1;
 * @return {?proto.Specification}
 */
proto.SpecificationAnalysis.prototype.getSpecification = function() {
  return /** @type{?proto.Specification} */ (
    jspb.Message.getWrapperField(this, specification_pb.Specification, 1));
};


/** @param {?proto.Specification|undefined} value */
proto.SpecificationAnalysis.prototype.setSpecification = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.SpecificationAnalysis.prototype.clearSpecification = function() {
  this.setSpecification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SpecificationAnalysis.prototype.hasSpecification = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto);
